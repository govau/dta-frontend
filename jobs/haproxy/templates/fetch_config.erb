#!/bin/bash
#
# Usage:
# fetch_config <object key> [version ID]
#
# Downloads and installs runtime config files from the given object in the
# config bucket, optionally at the given version (defaults to latest).

set -e
source /var/vcap/packages/awscli/bosh/runtime.env
set -u

JOB_DIR=/var/vcap/jobs/haproxy/
LOG_FILE=/var/vcap/sys/log/haproxy/updates.txt
KEY="$1"
VERSION="${2:-}"

echo "$(date) Trying to fetch ${KEY} ${VERSION}" >> "${LOG_FILE}"

WORK_DIR="$(mktemp -d)"
trap 'rm -rf "${WORK_DIR}"' EXIT
cd "${WORK_DIR}"

aws s3api get-object --bucket '<%= p('config_bucket') %>' --key "${KEY}" ${VERSION:+--version-id "${VERSION}"} config.tgz &>> "${LOG_FILE}"
mkdir -p config
tar xf config.tgz --directory=config

BACKUP_DIR="${JOB_DIR}/config-backup-$(date -Iseconds)"
mv "${JOB_DIR}/config" "${BACKUP_DIR}"
mv config "${JOB_DIR}/config"

# TODO: Remove this after the migration from acme-proxy-boshrelease
if [[ ! -d "${JOB_DIR}/config/haproxy.d" ]];
then
   mv "${JOB_DIR}/config/configs" "${JOB_DIR}/config/haproxy.d"
   cp "${JOB_DIR}/__bootstrap.cfg" "${JOB_DIR}/config/haproxy.d"
fi

if /var/vcap/jobs/haproxy/bin/haproxy_ctl test >> "${LOG_FILE}"
then
	rm -rf "${BACKUP_DIR}"
	echo "$(date) Fetch completed successfully" >> "${LOG_FILE}"
else
	rm -rf "${JOB_DIR}/config"
	mv "${BACKUP_DIR}" "${JOB_DIR}/config"
	echo "$(date) Fetch failed" >> "${LOG_FILE}"
	exit 1
fi
